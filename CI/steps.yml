parameters:
  name: ""
  javaVersion: ""
  serverVersion: ""

steps:
  - task: UsePythonVersion@0
    displayName: "Setup python"
    inputs:
      versionSpec: "3.x"
      addToPath: true
      architecture: "x64"

  - script: python -m pip install --upgrade git+https://github.com/neo4j-drivers/boltkit.git@1.3#egg=boltkit
    displayName: "Install boltkit"

  - pwsh: |
      echo "##vso[task.setvariable variable=JAVA_HOME]$env:JAVA_HOME_${{ parameters.javaVersion }}_X64"
    displayName: "Setup java"

  - bash: |
      cat /etc/security/limits.conf
      ulimit -aS
      ulimit -aH
      ulimit -n 8192
      ulimit -aS
      ulimit -aH
    displayName: Set open files limit
    condition: or(eq( variables['Agent.OS'], 'Linux' ),eq( variables['Agent.OS'], 'Darwin' ))

  - pwsh: |
      # This script is here because neo4j server with IPv6 enabled failed to start up with
      # the hosted ubuntu-16.04 image. The machine indeed had IPv6 enabled, but it seems that
      # it makes difference for Java how the running process is launched to discover whether
      # IPv6 is enabled or disabled, so this script makes best effort to discover whether the
      # the server can start-up with IPv6 and if failed, it defines an `NEOCTRL_DISABLE_IPV6`
      # environment variable so that the further tests could behave based on that.
      #
      # See https://bugs.openjdk.java.net/browse/JDK-8211842 for more information.
      $Target = "TestServerTarget"

      $env:NEOCTRL_LOCAL_PACKAGE = & neoctrl-download $(serverVersion) "$Target"
      echo "##vso[task.setvariable variable=NEOCTRL_LOCAL_PACKAGE]$env:NEOCTRL_LOCAL_PACKAGE"

      $Server = & neoctrl-install $(serverVersion) "$Target"
      If ($LastExitCode -ne 0)
      {
        throw "Unable to install server"
      }

      & neoctrl-configure "$Server" dbms.connectors.default_listen_address=::
      If ($LastExitCode -ne 0)
      {
        throw "Unable to enable IPV6"
      }

      try
      {
        & neoctrl-start "$Server"
        if ( $LastExitCode -ne 0 )
        {
            throw "Unable to start server"
        }

        & neoctrl-stop "$Server"
      }
      catch
      {
        echo "IPv6 seems not to be available, disabling in in tests"
        echo "##vso[task.setvariable variable=NEOCTRL_DISABLE_IPV6]true"
        exit 0
      }
    displayName: "Download server and test for IPv6"
    env:
      TEAMCITY_HOST: $(TEAMCITY_HOST)
      TEAMCITY_USER: $(TEAMCITY_USER)
      TEAMCITY_PASSWORD: $(TEAMCITY_PASSWORD)

  - task: DotNetCoreCLI@2
    displayName: "Restore"
    inputs:
      command: restore
      projects: "**/*.csproj"

  - task: DotNetCoreCLI@2
    displayName: "Build"
    inputs:
      command: build
      projects: "**/*.csproj"

  - task: DotNetCoreCLI@2
    displayName: "Run unit tests"
    inputs:
      command: test
      arguments: --verbosity diagnostic
      projects: "**/Neo4j.Driver.Tests/*.csproj"
      testRunTitle: "UnitTests-${{ parameters.name }}"

  - task: DotNetCoreCLI@2
    displayName: "Run integration tests"
    inputs:
      command: test
      arguments: --verbosity diagnostic
      projects: "**/Neo4j.Driver.Tests.Integration/*.csproj"
      testRunTitle: "IntegrationTests-${{ parameters.name }}"
    env:
      NEOCTRLARGS: ${{ parameters.serverVersion }}

  - pwsh: |
      Get-ChildItem env:* | sort-object name | Format-Table -Wrap -AutoSize | Out-File $env:BUILD_ARTIFACTSTAGINGDIRECTORY/environment.txt
    displayName: "Gather environment variables"
    condition: always()

  - task: CopyFiles@2
    displayName: "Gather log files"
    condition: always()
    inputs:
      sourceFolder: "$(Build.SourcesDirectory)"
      contents: |
        Target/**/*.log
        Target/**/*.conf
      targetFolder: "$(Build.ArtifactStagingDirectory)"

  - task: PublishBuildArtifacts@1
    displayName: "Publish log files"
    condition: always()
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: "${{ parameters.name }}-logs"
